#!/usr/bin/env node

require('dotenv').config({silent: true})

const fs = require('fs')
const loadDatabase = require('../lib/load-database')
const retrieveLegacyRedirects = require('../lib/build/retrieve-legacy-redirects')
const retrieveHomePage = require('../lib/build/retrieve-single-content-page')('homepage', 'home', '/')
const retrieveAboutContentPage = require('../lib/build/retrieve-single-content-page')('aboutPage', 'about-content')
const retrieveActivityContentPage = require('../lib/build/retrieve-single-content-page')('activityPage', 'activity-content')
const retrieveStoriesContentPage = require('../lib/build/retrieve-single-content-page')('storiesPage', 'stories-content')
const retrieveBasicContentPages = require('../lib/build/retrieve-content-pages')('page', 'content')
const retrieveStoryPages = require('../lib/build/retrieve-content-pages')('story', 'story', 'stories')
const addStoryPagesToStoriesPage = require('../lib/build/add-story-pages-to-stories-page')
const mapPageMultiValuedFieldsToArrays = require('../lib/build/page-multi-valued-fields-to-array')
const renderPages = require('../lib/build/render-pages')

function initConfig () {
  const basePath = fs.realpathSync('./')
  const publicPath = `${basePath}/public`
  const databasePath = `${publicPath}/content/db.json`

  return {
    config: {
      env: process.env.NODE_ENV,
      baseUrl: process.env.BASE_URL,
      gaTrackingCode: process.env.GA_TRACKING_CODE,
      googleMapsApiKey: process.env.GOOGLE_MAPS_API_KEY,
      basePath: basePath,
      publicPath: `${basePath}/public`,
      sitePath: `${basePath}/site`,
      databasePath: databasePath
    }
  }
}

function report (e) {
  console.log(`Build ${Object.keys(e.pages).length} pages`)

  return e
}

function build () {
  return Promise.resolve()
    .then(initConfig)
    .then(loadDatabase)
    .then(retrieveLegacyRedirects)
    .then(retrieveHomePage)
    .then(retrieveAboutContentPage)
    .then(retrieveActivityContentPage)
    .then(retrieveStoriesContentPage)
    .then(retrieveBasicContentPages)
    .then(retrieveStoryPages)
    .then(mapPageMultiValuedFieldsToArrays)
    .then(addStoryPagesToStoriesPage)
    .then(renderPages)
    .then(report)
    .catch(err => { console.log(err); process.exit(1) })
}

build()
