{
  "name": "reality-website",
  "version": "1.0.0",
  "description": "Reality website",
  "author": "Mark van Duijker <mark@duyker.nl>",
  "dependencies": {
    "autoprefixer": "^8.2.0",
    "contentful": "^5.0.5",
    "copyfiles": "^2.0.0",
    "critical": "^1.2.2",
    "cssnano": "^3.8.0",
    "dotenv": "^5.0.1",
    "download": "^6.2.5",
    "es6-promisify": "^6.0.0",
    "fs-extra": "^5.0.0",
    "glob": "^7.1.1",
    "html-minifier": "^3.1.0",
    "imagemin": "^5.2.2",
    "imagemin-gifsicle": "^5.1.0",
    "imagemin-jpegtran": "^5.0.2",
    "imagemin-optipng": "^5.2.1",
    "imagemin-svgo": "^6.0.0",
    "linkify-it": "^2.0.2",
    "lodash": "^4.16.4",
    "markdown-it": "^8.0.1",
    "markdown-it-anchor": "^4.0.0",
    "markdown-it-emoji": "^1.3.0",
    "markdown-it-external-links": "^0.0.6",
    "markdown-it-footnote": "^3.0.1",
    "moment": "^2.15.2",
    "netlify-cli": "^1.1.0",
    "node-sass": "^4.0.0",
    "postcss": "^6.0.12",
    "postcss-cli": "^5.0.0",
    "postcss-inline-svg": "^3.0.0",
    "proxyquire": "^2.0.1",
    "pug": "^2.0.0-beta6",
    "reading-time": "^1.1.0",
    "rimraf": "^2.5.4",
    "sharp": "^0.20.1",
    "skeleton-scss": "^2.0.4",
    "write-json-file": "^2.0.0"
  },
  "devDependencies": {
    "concurrently": "^3.4.0",
    "debug": "^3.1.0",
    "http-server": "^0.11.1",
    "live-reload": "^1.1.0",
    "nyc": "^11.2.1",
    "standard": "^11.0.1",
    "tap-spec": "^4.1.1",
    "tape": "^4.6.0",
    "watch": "^1.0.1"
  },
  "scripts": {
    "test": "npm run lint && tape 'test/**/*.js' | tap-spec",
    "test-with-coverage": "nyc npm test",
    "clean": "rimraf public",
    "build:static": "copyfiles -u 2 'site/static/**/*' public",
    "build:site": "./bin/build",
    "build:css": "node-sass site/sass -o public/assets/styles && find public/assets/styles -type f -name '*.css' -exec postcss '{}' -r --no-map --use autoprefixer --use postcss-inline-svg \\;",
    "build:critical-css": "find public -type f -name '*.html' -not -name '404.html' | xargs  -I '{}' bash -c \"node_modules/.bin/critical '{}' -b public -i -m > public/tmp.html && mv public/tmp.html '{}'\"",
    "build:minify": "postcss public/assets/styles/*.css -r --no-map --use cssnano && html-minifier --input-dir public --output-dir public --minify-css --minify-js --case-sensitive --file-ext html",
    "build": "npm run build:static && npm run build:site && npm run build:css",
    "sync-content": "./bin/sync-contentful",
    "watch": "watch 'npm run build' site",
    "serve": "http-server -p 9090 public/",
    "live-reload": "live-reload --port 9091 public/",
    "dev": "concurrently \"npm run live-reload\" \"npm run serve\" \"npm run watch\"",
    "lint": "standard \"bin/*\" \"lib/**/*.js\" \"test/**/*.js\" \"site/static/assets/js/**/*.js\" \"site/static/service-worker.js\"",
    "deploy:test": "NODE_ENV=prod BASE_URL='https://reality-new.surge.sh' npm run build && npm run build:minify && echo \"User-agent: *\nDisallow: /\n\" > public/robots.txt && surge public reality-new.surge.sh",
    "deploy:production": "npm run build && npm run build:critical-css && npm run build:minify && netlify deploy -p public -s $NETLIFY_SITE_ID -t $NETLIFY_API_KEY"
  },
  "nyc": {
    "include": [
      "lib/**/*.js"
    ],
    "reporter": [
      "lcov",
      "text-summary"
    ],
    "all": true,
    "check-coverage": false
  }
}
